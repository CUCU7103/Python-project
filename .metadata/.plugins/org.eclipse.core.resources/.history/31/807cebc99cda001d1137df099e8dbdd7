# 원격 DB 서버와 연동을 진행하자.
# >pip install mysqlclient  모듈 다운로드 후 설치함.
# C:\Users\syste\AppData\Roaming\Python\Python310\site-packages 해당경로로 다운로드 받은 제3모듈이 저장되어진다.

import MySQLdb
 
# conn = MySQLdb.connect(host = '127.0.0.1', user = 'root', password='time@less6805', database='test' ,port=3306) # mariaDB와 연동을 진행한다.
# print(conn)
# conn.close()

config = { # connect가 dict type을 받는다.
    
    'host':'127.0.0.1',
    'user':'root',
    'password':'time@less6805',
    'database':'test',
    'port':3306,
    'charset':'utf8',
    'use_unicode':True

}

# sangdata 테이블을 사용

try: 
    conn = MySQLdb.connect(**config) # ** dict , * tuple
    cursor = conn.cursor()
    
    # 자료 추가
    '''
    sql = "insert into sangdata(code,sang,su,dan) values(%s,%s,%s,%s)" # ?를 사용하지 못한다 대신 %s(문자열)을 사용한다.
    sql_data = ('10','신상', 5, 5000)
    # sql_data = '10','신상', 5, 5000 # 위와 같은 tuple이다.
    # cursor.execute(sql,sql_data) # 맵핑된 변수를 넣어준다.
    # print('count: ' , count)
    count = cursor.execute(sql,sql_data)
    conn.commit() # commit 하지 않으면 원본데이터에 저장되지 않음
    '''
    # 자료 수정
    '''
    sql = "update sangdata set sang=%s, su=%s, dan=%s where code=%s"  # 수정 작업을 진행
    sql_data = ('운동화','12',150000,10)
    count = cursor.execute(sql,sql_data) #  sql문 수행
    conn.commit() # 커밋 실행.
    '''
    
    # 자료 삭제
    code = 10
    # sql = "delete from sangdata where code=" + code     # secure coding '+ code'는 권장 x
    # sql = "delete from sangdata where code=%s"
    # cursor.execute(sql,(code,)) # tuple 형태로 넘겨주어야 한다.
    sql = "delete from sangdata where code={0}".format(code)
    count = cursor.execute(sql)
    if count !=0:
        print('삭제 성공')
        conn.commit()
    else: 
        print('삭제 실패')
    
    
    
    # 자료 읽기 
    sql = "select * from sangdata"
    cursor.execute(sql) # sql문 수행한다.
    
    for data in cursor.fetchall(): # 데이터를 반복문을 통해서 출력한다.
        # print(data) tuple 형식으로 출력된다.
        print('%s, %s, %s, %s'%data)
    
    print()
    for r in cursor: # r은 튜플 type이다
        print(r[0],r[1],r[2],r[3]) # 순서가 있다. 인덱스가 존재함.
    
    # print()
    # for (code, sang, su, dan) in cursor:
    #     print(code,sang,su,dan) # 가독성을 위해 sql문의 속성 값과 동일한 이름을 부여함.
    #
    # print()
    # for (kbs, sbs,mbc, 단가) in cursor:
    #     print(kbs, sbs,mbc,단가)  # sql문의 속성 값이 아니라 그냥 변수명을 준것이다. 
        
        
            
except Exception as e:
    print('err : ', e)
    conn.rollback()
    
finally:
    cursor.close()
    conn.close()









